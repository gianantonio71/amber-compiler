MembCopyVar* memb_copy_vars(Automaton auto)
{
  assert not (? s <- values(auto.state)  : memb_copy_vars_in_expr(s.init_value) != {});
  assert not (? p <- values(auto.params) : memb_copy_vars_in_expr(p) != {});

  return union({memb_copy_vars_in_expr(r) : r <- values(auto.rules)} & {memb_copy_vars(a) : a <- auto.actions});
}


MembCopyVar* memb_copy_vars(AutoAction action)
{
  cond_vars = memb_copy_vars_in_expr(action.cond);
  body_vars = union({memb_copy_vars(sa) : sa <- action.body});
  else_vars = union({memb_copy_vars(sa) : sa <- action.else});
  return cond_vars & body_vars & else_vars;
}


MembCopyVar* memb_copy_vars(AutoUpdate update) = memb_copy_vars_in_expr(update.value);


MembCopyVar* memb_copy_vars_in_expr(Expr expr):
  memb_copy_var()   = {expr},
  _                 = retrieve_from_nested_exprs(expr, memb_copy_vars_in_expr);
